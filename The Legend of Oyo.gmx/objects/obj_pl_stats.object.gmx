<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize stats

hp = 10;
attack = 1;
max_hp = hp;
stamina = 50;
max_stamina = stamina;
level = 1;
expr = 0;
maxexpr = 6;
boss_bjorn = 0;
boss_octo = 0;
boss_rat = 0;
boss_boar = 0;
boss_gust = 0;
boss_rhino = 0;
boss_k9 = 0;
boss_dragon = 0;
boss_turtle = 0;
boss_devil = 0;



draw_set_colour(c_white);

//get the player's xstart and ystart
if(instance_exists(obj_player)){
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
}else{
    player_xstart = 0;
    player_ystart = 0;
}

//SAVE the previous room
previous_room = room;

 
room_start_action = NEW_ROOM;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stamina regen alarm

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

///  control stat

if(hp &lt; 0) {
    hp = 0;
}

//stamina regen
if(stamina  &lt; max_stamina &amp;&amp; alarm[0] == -1 ){
   if (room != rm_pause) {
        stamina++;
    }
    
}


//pause the game
if(obj_input.key_pause){
    if(room != rm_pause){
        if(instance_exists(obj_player)){
            obj_player.persistent = false;
        }
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
        
    }else{
            
             
              room_goto(previous_room);
    }
    obj_input.key_pause = false;
}


if(boss_bjorn = 1 &amp;&amp; boss_octo = 1 &amp;&amp; boss_rat = 1 &amp;&amp; boss_boar = 1 &amp;&amp; boss_gust = 1 &amp;&amp; boss_rhino = 1 &amp;&amp; boss_k9 = 1
 &amp;&amp; boss_dragon = 1 &amp;&amp; boss_turtle = 1 &amp;&amp; boss_devil = 1 )
{
    if show_question("Thank you for playing you just finished the game . Want to try again ?"){
        game_restart();
    }else{
        game_end();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///remember the player start position
//lahat ng room ng di ksama sa level
if(room == rm_pause) exit;

switch(room_start_action){
    case RETURN:
        break;
    case NEW_ROOM:
    default:
        if(instance_exists(obj_player)){
            player_xstart = obj_player.x;
            player_ystart = obj_player.y
    }break;
     
    case LOAD:
        scr_load_game();
        break;

     case CHECKPOINT:
        scr_autoload_game();
        break;
}

//room_persistent = false;
room_start_action = NEW_ROOM;

//reset the room start action

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/// draw stats
/*

draw_set_colour(c_black);
draw_text(32 ,16 , "HP: " + string(hp) + "/" + string(max_hp))
draw_text(32, 32 , "STAMINA: " + string(stamina) + "/" + string(max_stamina));
 //draw_text(32, 48 , "BOSS: " + string(boss_bjorn));
 
*/ 


//draw_set_colour(c_black);
//draw_text(32 ,16 , "HP: " + string(hp) + "/" + string(max_hp))
//draw_text(32, 32 , "STAMINA: " + string(stamina) + "/" + string(max_stamina));
 //draw_text(32, 48 , "BOSS: " + string(boss_bjorn));
 //draw_sprite(spr_guiBar,0,32,16);
// draw_sprite(spr_lifeBar,0,32,16);
 scr_bar(19 , 14 , hp, max_hp, spr_lifeBar, spr_guiBar,  46,  20, spr_xpBar, stamina, max_stamina,  46, 29);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
